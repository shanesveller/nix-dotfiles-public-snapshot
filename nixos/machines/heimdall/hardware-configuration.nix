# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ lib, modulesPath, ... }: {
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.kernelParams = [ "elevator=none" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "rpool/system/root";
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-partuuid/213186a5-3175-4bea-816b-32162fc27f28";
    fsType = "vfat";
  };

  fileSystems."/home" = {
    device = "rpool/user/home";
    fsType = "zfs";
  };

  fileSystems."/nix" = {
    device = "rpool/local/nix";
    fsType = "zfs";
  };

  # zfs create -o mountpoint=legacy rpool/local/backups
  fileSystems."/srv/backups" = {
    device = "rpool/local/backups";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  # zfs create -o mountpoint=legacy rpool/local/docker-registry-caches
  fileSystems."/srv/docker-registry-caches" = {
    device = "rpool/local/docker-registry-caches";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  # zfs create -o mountpoint=legacy rpool/user/dropbox
  fileSystems."/srv/dropbox" = {
    device = "rpool/user/dropbox";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  # zfs create -o mountpoint=legacy rpool/local/git
  fileSystems."/srv/git" = {
    device = "rpool/local/git";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  # zfs create -o mountpoint=legacy rpool/local/postgres
  fileSystems."/srv/postgres" = {
    device = "rpool/local/postgres";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  # zfs create -o mountpoint=legacy rpool/local/steam
  fileSystems."/srv/steam" = {
    device = "rpool/user/steam";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  fileSystems."/var" = {
    device = "rpool/system/var";
    fsType = "zfs";
  };

  # zfs create -V 100G -b (getconf PAGESIZE) -o logbias=throughput -o primarycache=metadata -o com.sun:auto-snapshot=false rpool/data/docker-xfs
  # mkfs.xfs -f /dev/zvol/rpool/local/docker-xfs
  fileSystems."/var/lib/docker" = {
    device = "/dev/zvol/rpool/local/docker-xfs";
    fsType = "xfs";
    options = [ "nofail" ];
  };

  # zfs create -o mountpoint=legacy rpool/local/docker-registry
  fileSystems."/var/lib/docker-registry" = {
    device = "rpool/local/docker-registry";
    fsType = "zfs";
    options = [ "nofail" ];
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/ab8fc77c-08dd-4375-99bc-9beb19ee7fb3"; }];

  nix.maxJobs = lib.mkDefault 16;
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";

  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;

  systemd.services = {
    "container@dockerHubProxy".unitConfig.RequiresMountFor =
      "/srv/docker-registry-caches";
    "container@gcrProxy".unitConfig.RequiresMountFor =
      "/srv/docker-registry-caches";
    "container@ghcrProxy".unitConfig.RequiresMountFor =
      "/srv/docker-registry-caches";
    docker.unitConfig.RequiresMountFor = "/var/lib/docker";
    gitea.unitConfig.RequiresMountFor = "/srv/backups /srv/git";
  };
}
